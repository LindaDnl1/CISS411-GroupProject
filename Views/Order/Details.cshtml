@*
Course #: CISS 411
Group 3: Ashley Steward, Linda Daniel, Allan Lopesandovall, Brenden Hoffman, 
Jason Farr, Jerome Whitaker, Jason Farr and Justin Kim.
Date Completed: 10-2-2025
Story Assignee: Ashley Steward 
*@

@model CISS411_GroupProject.Models.Order

@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager


@{
    ViewData["Title"] = "Order Details";
    var identityUserId = UserManager.GetUserId(User);
    var currentUserId = (int?)ViewData["CurrentUserId"];
    var existingFeedback = Model.Feedbacks.FirstOrDefault(f => f.CustomerID == currentUserId);
    bool hasCustomDesign = Model.OrderItems.Any(i => i.ItemName == "Custom Design");
}

<div class="container mt-4">
    <h2>Order Details</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card mb-3">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">Order #@Model.OrderID Information</h4>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <p><strong>Customer:</strong> @(Model.Customer != null ? $"{Model.Customer.FirstName} {Model.Customer.LastName}" : "—")</p>
                    <p><strong>Occasion:</strong> @Model.Occasion</p>
                    <p><strong>Delivery Date:</strong> @Model.DeliveryDate.ToString("MM/dd/yyyy")</p>
                    @if (!string.IsNullOrEmpty(Model.CustomDescription))
                    {
                        <p><strong>Custom Description:</strong> @Model.CustomDescription</p>
                    }
                </div>
                <div class="col-md-6">
                    <p><strong>Budget:</strong> @(Model.Budget.HasValue ? $"${Model.Budget.Value:F2}" : "—")</p>
                    <p>
                        <strong>Status:</strong>
                        <span class="badge
                            @(Model.Status == "Pending" ? "bg-warning text-dark" :
                              Model.Status == "Awaiting Customer Approval" ? "bg-info" :
                              Model.Status == "In Process" ? "bg-primary" :
                              Model.Status == "Ready" ? "bg-success" : "bg-secondary")">
                            @Model.Status
                        </span>
                        <!-- Linda: 10-17-25 Display picked up timestamp -->
                        @if (Model.PickedUpAt.HasValue)
                        {
                        <p><strong>Picked Up:</strong> @Model.PickedUpAt.Value.ToString("g")</p>
                    }
                    </p>
                    <p><strong>Created:</strong> @Model.CreatedAt.ToString("g")</p>
                </div>
            </div>
        </div>
    </div>

    <div class="card mb-3">
        <div class="card-header">
            <h4 class="mb-0">Order Items</h4>
        </div>
        <div class="card-body">
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Item Name</th>
                        @if (hasCustomDesign)
                        {
                            <th>Customer Description</th>
                        }
                        <th width="120">Quantity</th>
                        <th width="160">Design Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.OrderItems)
                    {
                        <tr>
                            <td>@item.ItemName</td>
                            @if (hasCustomDesign)
                            {
                                <td>
                                    @if (item.ItemName == "Custom Design" && !string.IsNullOrEmpty(item.CustomDescription))
                                    {
                                        @item.CustomDescription
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                            }
                            <td>@item.Quantity</td>
                            <td>
                                @if (item.DesignApproved)
                                {
                                    <span class="badge bg-success">✓ Approved</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning text-dark">Pending</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="card mb-3">
        <div class="card-header bg-info text-white">
            <h4 class="mb-0">Design Management</h4>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-8">
                    @if (Model.Status == "Pending")
                    {
                        <p class="mb-2"><strong>Status:</strong> Waiting for employee to upload design proposals.</p>
                    }
                    else if (Model.Status == "Awaiting Customer Approval")
                    {
                        <p class="mb-2"><strong>Status:</strong> Design proposals submitted — awaiting customer review.</p>
                        @if (User.IsInRole("Customer") && Model.Designs != null && Model.Designs.Any())
                        {
                            <div class="alert alert-warning mb-2">
                                <strong>Action Required:</strong> Please review and approve a design to continue with your order.
                            </div>
                        }
                    }
                    else if (Model.Status == "In Process")
                    {
                        <p class="mb-2"><strong>Status:</strong> Design approved — order is being processed.</p>
                    }
                    else if (Model.Status == "Ready")
                    {
                        <p class="mb-2"><strong>Status:</strong> Order is ready for pickup!</p>
                    }
                    else if (Model.Status == "Picked Up")
                    {
                        <p class="mb-2"><strong>Status:</strong> Order has been picked up.</p>
                    }

                    <p class="text-muted mb-0">
                        <small>
                            @if (Model.Designs != null && Model.Designs.Any())
                            {
                                <text>@Model.Designs.Count design(s) uploaded</text>
                                @if (Model.Designs.Any(d => d.IsApproved))
                                {
                                    var approved = Model.Designs.First(d => d.IsApproved);
                                    <text> | <span class="text-success">Design Approved</span>
                                        @if (approved.ApprovedAt.HasValue)
                                        {
                                            <text> on @approved.ApprovedAt.Value.ToString("MM/dd/yyyy")</text>
                                        }
                                    </text>
                                }
                            }
                            else
                            {
                                <text>No designs uploaded yet</text>
                            }
                        </small>
                    </p>
                </div>
                <div class="col-md-4 text-end">
                    @if (User.IsInRole("Employee") || User.IsInRole("Admin"))
                    {
                        <a asp-controller="Designs" asp-action="ViewForOrder" asp-route-id="@Model.OrderID" class="btn btn-info mb-2 w-100">
                            Manage Designs
                        </a>
                        @if (Model.Status == "Pending")
                        {
                            <a asp-controller="Designs" asp-action="Upload" asp-route-id="@Model.OrderID" class="btn btn-success w-100">
                                Upload New Design
                            </a>
                        }
                    }
                    else if (User.IsInRole("Customer"))
                    {
                        <a asp-controller="Designs" asp-action="ViewForOrder" asp-route-id="@Model.OrderID" class="btn btn-info w-100">
                            View Designs
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>

    @if (User.IsInRole("Employee") || User.IsInRole("Admin"))
    {
        <div class="card mb-3">
            <div class="card-header">
                <h5 class="mb-0">Update Order Status</h5>
            </div>
            <div class="card-body">
                <form asp-action="UpdateStatus" method="post" class="row g-3 align-items-center">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.OrderID" />
                    <div class="col-auto">
                        <label for="status" class="col-form-label">New Status:</label>
                    </div>
                    <div class="col-auto">
                        @{
                            var statusOptions = new List<SelectListItem>
                                        {
                                        new("Pending", "Pending", Model.Status == "Pending"),
                                        new("Awaiting Customer Approval", "Awaiting Customer Approval", Model.Status == "Awaiting Customer Approval"),
                                        new("In Process", "In Process", Model.Status == "In Process"),
                                        new("Ready", "Ready", Model.Status == "Ready"),
                                        new("Picked Up", "Picked Up", Model.Status == "Picked Up"),
                                        };
                        }
                        @Html.DropDownList("status", statusOptions, new { @class = "form-select", id = "status" })
                    </div>
                    <div class="col-auto">
                        <button type="submit" class="btn btn-primary">Update Status</button>
                    </div>
                </form>
            </div>
        </div>

        @if (Model.Feedbacks != null && Model.Feedbacks.Any())
        {
            <div class="card mb-3">
                <div class="card-header bg-success text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Customer Feedback</h5>
                        <a asp-action="Feedback" asp-route-id="@Model.OrderID" class="btn btn-light btn-sm">
                            View All Feedback
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    @foreach (var feedback in Model.Feedbacks.Take(2))
                    {
                        <div class="mb-3">
                            <div class="d-flex justify-content-between">
                                <strong>@feedback.Customer.FirstName @feedback.Customer.LastName</strong>
                                @if (feedback.Rating.HasValue)
                                {
                                    <span class="badge bg-warning text-dark">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= feedback.Rating.Value)
                                            {
                                                <span>★</span>
                                            }
                                            else
                                            {
                                                <span>☆</span>
                                            }
                                        }
                                        (@feedback.Rating.Value/5)
                                    </span>
                                }
                            </div>
                            <small class="text-muted">@feedback.CreatedAt.ToString("MM/dd/yyyy h:mm tt")</small>
                            <p class="mt-2 mb-0">@feedback.FeedbackText</p>
                        </div>
                        @if (Model.Feedbacks.Count() > 1 && feedback != Model.Feedbacks.Last())
                        {
                            <hr />
                        }
                    }
                    @if (Model.Feedbacks.Count() > 2)
                    {
                        <div class="text-center mt-3">
                            <a asp-action="Feedback" asp-route-id="@Model.OrderID" class="btn btn-outline-success">
                                View All @Model.Feedbacks.Count() Feedback(s)
                            </a>
                        </div>
                    }
                </div>
            </div>
        }
    }
          
    <!-- A.S. Created for employee timestamp. -->
    @if (User.IsInRole("Employee") || User.IsInRole("Admin"))
    {
         <!-- Linda: 10-17-25 Updated to hide button on picked up status -->
        if (Model.Status != "Ready" && Model.Status != "Picked Up")
        {
            <form asp-action="MarkReady" asp-route-id="@Model.OrderID" method="post" class="mt-3">
                <button type="submit" class="btn btn-success">
                    Mark as Ready for Pickup
                </button>
            </form>
        }

        else
        {
            <div class="alert alert-info mt-3">
                This order was marked ready on @Model.ReadyAt?.ToString("f")
            </div>
        }
    }

    <!-- Linda: Customer Feedback -->
    @if (User.IsInRole("Customer") && Model.Status == "Picked Up")
    {
        var hasFeedback = existingFeedback != null && !string.IsNullOrEmpty(existingFeedback.FeedbackText);

        if (!hasFeedback)
        {
            <a asp-controller="Feedback" asp-action="Create" asp-route-orderId="@Model.OrderID"
               class="btn btn-outline-primary">
                Leave Feedback
            </a>
        }
    }

    <div class="mt-3">
        <a asp-action="List" class="btn btn-secondary">Back to Order List</a>
    </div>
    <br />

    <!-- Linda: 10-17-25 Feedback customers view only / Added wrap for customer role -->
    @if (User.IsInRole("Customer"))
    {
    <div class="card flex-grow-2" style="border-color:deepskyblue; color:#007bff; min-width:300px;">
        <div class="card-header" style="background-color:cornflowerblue; color:white;">
            Your Feedback
        </div>
        <div class="card-body">
            @if (existingFeedback != null && !string.IsNullOrEmpty(existingFeedback.FeedbackText))
            {
                <p>@existingFeedback.FeedbackText</p>
                @if (existingFeedback.Rating.HasValue)
                {
                    <small>Rating: @existingFeedback.Rating / 5</small>
                }
            }
            else
            {
                <p>No feedback submitted for this order.</p>
            }
        </div>
    </div>
    }
</div>